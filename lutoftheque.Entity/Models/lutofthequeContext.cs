// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace lutoftheque.Entity.Models;

public partial class lutofthequeContext : DbContext
{
    public lutofthequeContext(DbContextOptions<lutofthequeContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Event> Events { get; set; }

    public virtual DbSet<Game> Games { get; set; }

    public virtual DbSet<Keyword> Keywords { get; set; }

    public virtual DbSet<Player> Players { get; set; }

    public virtual DbSet<PlayerGame> PlayerGames { get; set; }

    public virtual DbSet<PlayerKeyword> PlayerKeywords { get; set; }

    public virtual DbSet<PlayerTheme> PlayerThemes { get; set; }

    public virtual DbSet<Theme> Themes { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Event>(entity =>
        {
            entity.HasKey(e => e.EventId).HasName("PK__Event__7944C81095D1CD80");

            entity.ToTable("Event");

            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.FkOrganizerId).HasColumnName("Fk_OrganizerID");
            entity.Property(e => e.StartTime).HasColumnType("datetime");

            entity.HasOne(d => d.FkOrganizer).WithMany(p => p.Events)
                .HasForeignKey(d => d.FkOrganizerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Event__Fk_Organi__44FF419A");

            entity.HasMany(d => d.FkPlayers).WithMany(p => p.FkEvents)
                .UsingEntity<Dictionary<string, object>>(
                    "Participate",
                    r => r.HasOne<Player>().WithMany()
                        .HasForeignKey("FkPlayerId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Participa__Fk_Pl__5070F446"),
                    l => l.HasOne<Event>().WithMany()
                        .HasForeignKey("FkEventId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Participa__Fk_Ev__4F7CD00D"),
                    j =>
                    {
                        j.HasKey("FkEventId", "FkPlayerId").HasName("PK__Particip__EA4F53D93287B190");
                        j.ToTable("Participate");
                        j.IndexerProperty<int>("FkEventId").HasColumnName("Fk_EventId");
                        j.IndexerProperty<int>("FkPlayerId").HasColumnName("Fk_PlayerId");
                    });
        });

        modelBuilder.Entity<Game>(entity =>
        {
            entity.HasKey(e => e.GameId).HasName("PK__Game__2AB897FD04A5F01D");

            entity.ToTable("Game");

            entity.Property(e => e.FkThemeId).HasColumnName("Fk_ThemeId");
            entity.Property(e => e.GameDescription).IsRequired();
            entity.Property(e => e.GameName)
                .IsRequired()
                .HasMaxLength(125);
            entity.Property(e => e.IsExtension).HasDefaultValueSql("((0))");
            entity.Property(e => e.Picture)
                .IsRequired()
                .HasMaxLength(125);
            entity.Property(e => e.Video)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.FkTheme).WithMany(p => p.Games)
                .HasForeignKey(d => d.FkThemeId)
                .HasConstraintName("FK__Game__Fk_ThemeId__4222D4EF");

            entity.HasMany(d => d.FkKeywords).WithMany(p => p.FkGames)
                .UsingEntity<Dictionary<string, object>>(
                    "IsDefinedBy",
                    r => r.HasOne<Keyword>().WithMany()
                        .HasForeignKey("FkKeywordId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__IsDefined__Fk_Ke__4CA06362"),
                    l => l.HasOne<Game>().WithMany()
                        .HasForeignKey("FkGameId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__IsDefined__Fk_Ga__4BAC3F29"),
                    j =>
                    {
                        j.HasKey("FkGameId", "FkKeywordId").HasName("PK__IsDefine__C15D26279AA5D685");
                        j.ToTable("IsDefinedBy");
                        j.IndexerProperty<int>("FkGameId").HasColumnName("Fk_GameId");
                        j.IndexerProperty<int>("FkKeywordId").HasColumnName("Fk_KeywordId");
                    });

            entity.HasMany(d => d.FkSecondaryThemes).WithMany(p => p.FkGames)
                .UsingEntity<Dictionary<string, object>>(
                    "HasSecondary",
                    r => r.HasOne<Theme>().WithMany()
                        .HasForeignKey("FkSecondaryThemeId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__HasSecond__Fk_Se__48CFD27E"),
                    l => l.HasOne<Game>().WithMany()
                        .HasForeignKey("FkGameId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__HasSecond__Fk_Ga__47DBAE45"),
                    j =>
                    {
                        j.HasKey("FkGameId", "FkSecondaryThemeId").HasName("PK__HasSecon__DC1B9F089E485BC0");
                        j.ToTable("HasSecondary");
                        j.IndexerProperty<int>("FkGameId").HasColumnName("Fk_GameId");
                        j.IndexerProperty<int>("FkSecondaryThemeId").HasColumnName("Fk_SecondaryThemeId");
                    });
        });

        modelBuilder.Entity<Keyword>(entity =>
        {
            entity.HasKey(e => e.KeywordId).HasName("PK__Keyword__37C1352152A33E79");

            entity.ToTable("Keyword");

            entity.HasIndex(e => e.KeywordName, "UQ__Keyword__830B48D9628090C5").IsUnique();

            entity.Property(e => e.KeywordDescription).IsRequired();
            entity.Property(e => e.KeywordName)
                .IsRequired()
                .HasMaxLength(125);
        });

        modelBuilder.Entity<Player>(entity =>
        {
            entity.HasKey(e => e.PlayerId).HasName("PK__Player__4A4E74C86E1C9FF6");

            entity.ToTable("Player");

            entity.HasIndex(e => e.Nickname, "UQ__Player__CC6CD17E4911715C").IsUnique();

            entity.Property(e => e.Birthdate).HasColumnType("date");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(125);
            entity.Property(e => e.HashPwd)
                .IsRequired()
                .HasMaxLength(125);
            entity.Property(e => e.IsAdmin).HasDefaultValueSql("((0))");
            entity.Property(e => e.Nickname)
                .IsRequired()
                .HasMaxLength(125);
        });

        modelBuilder.Entity<PlayerGame>(entity =>
        {
            entity.HasKey(e => e.PlayerGameId).HasName("PK__Player_G__BC59793079905268");

            entity.ToTable("Player_Game");

            entity.Property(e => e.PlayerGameId).HasColumnName("Player_GameId");
            entity.Property(e => e.FkGameId).HasColumnName("Fk_GameId");
            entity.Property(e => e.FkPlayerId).HasColumnName("Fk_PlayerId");

            entity.HasOne(d => d.FkGame).WithMany(p => p.PlayerGames)
                .HasForeignKey(d => d.FkGameId)
                .HasConstraintName("FK__Player_Ga__Fk_Ga__5441852A");

            entity.HasOne(d => d.FkPlayer).WithMany(p => p.PlayerGames)
                .HasForeignKey(d => d.FkPlayerId)
                .HasConstraintName("FK__Player_Ga__Fk_Pl__534D60F1");
        });

        modelBuilder.Entity<PlayerKeyword>(entity =>
        {
            entity.HasKey(e => new { e.FkKeywordId, e.FkPlayerId }).HasName("PK__Player_K__EF6CF74C1040475F");

            entity.ToTable("Player_Keyword");

            entity.Property(e => e.FkKeywordId).HasColumnName("Fk_KeywordId");
            entity.Property(e => e.FkPlayerId).HasColumnName("Fk_PlayerId");
            entity.Property(e => e.KeywordNote).HasDefaultValueSql("((2))");

            entity.HasOne(d => d.FkKeyword).WithMany(p => p.PlayerKeywords)
                .HasForeignKey(d => d.FkKeywordId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Player_Ke__Fk_Ke__5812160E");

            entity.HasOne(d => d.FkPlayer).WithMany(p => p.PlayerKeywords)
                .HasForeignKey(d => d.FkPlayerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Player_Ke__Fk_Pl__59063A47");
        });

        modelBuilder.Entity<PlayerTheme>(entity =>
        {
            entity.HasKey(e => new { e.FkThemeId, e.FkPlayerId }).HasName("PK__Player_T__4F550EA71B88B152");

            entity.ToTable("Player_Theme");

            entity.Property(e => e.FkThemeId).HasColumnName("Fk_ThemeId");
            entity.Property(e => e.FkPlayerId).HasColumnName("Fk_PlayerId");
            entity.Property(e => e.ThemeNote).HasDefaultValueSql("((2))");

            entity.HasOne(d => d.FkPlayer).WithMany(p => p.PlayerThemes)
                .HasForeignKey(d => d.FkPlayerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Player_Th__Fk_Pl__5DCAEF64");

            entity.HasOne(d => d.FkTheme).WithMany(p => p.PlayerThemes)
                .HasForeignKey(d => d.FkThemeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Player_Th__Fk_Th__5CD6CB2B");
        });

        modelBuilder.Entity<Theme>(entity =>
        {
            entity.HasKey(e => e.ThemeId).HasName("PK__Theme__FBB3E4D9D64BC11E");

            entity.ToTable("Theme");

            entity.HasIndex(e => e.ThemeName, "UQ__Theme__4E60E6D0D0016A4E").IsUnique();

            entity.Property(e => e.ThemeName)
                .IsRequired()
                .HasMaxLength(125);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}